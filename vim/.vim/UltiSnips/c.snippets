
###########################################################################
#                            TextMate Snippets                            #
###########################################################################

<<<<<<< HEAD
snippet bflyhd "headsome" !b
/*
 *
 *        /-\       ,-\
 *       /   \     /   |
 *      |     \   /    /
 *       \     >-/    /
 *        \         /\`
 *         >-- /\ -<
 *        (   /  \  )
 *         |/     \/
 *         /
 *
 *
 *                       反　魂　蝶　で　あ　る　！
 *
 *                      GHL <2012.2.9.ghl@gmail.com>
 */

$0
endsnippet

snippet hd "headsome" !b
/*
 *       _,.--.,_                             _,.--.,_
 *      |  _____ |                           | _____  |
 *      |-'     \`'._________________________,'\`     \`-|
 *    ,'    ___    \`.                     ,'     .-.   \`\`.
 *   /     |   |     \\                   /      (/_\\)     \\
 *  !  ___  \\ /  ___  |                 !   ,-.  \`-'  ,-.  |
 *  | |___>     <___| !_SELECT   START__|  ([ ])     ( O ) !
 *  !       / \\      ____\`-.       .-'____  \`-'  .-.  \`-'  |
 *  |\\     |___|   ,'    \`. \\     / ,'    \`.    ( X )     /|
 *  | \`~          /        \\ |   | /        \\    \`-'    ,' |
 *  |   \`-~___,-. \\        / |___| \\        / ,-.____,-'   |
 *  |           '\\ \`.____,' /     \\ \`.____,' /\`.           |
 *  |          /  \`-.____,-'       \`-.____,-'   \\          |
 *  \\         /                                  \\         /
 *   \\       /                                    \\       /
 *    \`.__,-'                                      \`-.__,'
 *
 *
 *                                GHL <2012.2.9.ghl@gmail.com>
 */

$0
endsnippet

snippet inc "#Include" !b
#include <$1>
$0
endsnippet

snippet main "main() (main)" !b

int main(int argc, char **argv)
{
	(void)argc;
	(void)argv;

  ${1:/* code */}
  return 0;
}

endsnippet


snippet once "Include header once only guard"
#ifndef ${1:`!p
if not snip.c:
  import random, string
  name    = re.sub(r'[^A-Za-z0-9]+', '_', snip.fn).upper()
  rand    = ''.join(random.sample(string.ascii_letters + string.digits, 8))
  snip.rv = ('%s_INCLUDED_%s' % (name, rand)).upper()
else:
    snip.rv = snip.c`}
#define $1

${0}

#endif // end of include guard: $1

endsnippet

snippet todo "a todo reminder" !bs
// ${1:TODO}(ghlin) : ${2:reminder} `!v strftime("%F %T")`
endsnippet

snippet xxx "a xxx reminder" !bs
// ${1:XXX}(ghlin) : ${2:reminder} `!v strftime("%F %T")`
endsnippet

snippet fixme "a fixme reminder" !bs
// ${1:FIXME}(ghlin) : ${2:reminder} `!v strftime("%F %T")`
endsnippet

snippet brief "doxygen with @brief" !bs
/**
 * @brief $1
 */
$0
endsnippet

snippet comment "a nice comment" !bs
/*
 * $1
 */
$0
endsnippet

snippet "([^ 	])-" "->" !ir
`!p snip.rv = match.group(1)`->$0
endsnippet

snippet " -" "x - x" !ir
 - $0
endsnippet

snippet undef "undefine macro" !b
#ifdef $1
#undef $1
#endif
$0
endsnippet



# vim:ft=snippets:

